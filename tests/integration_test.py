import unittest\\\nimport asyncio\\\"import aiohttp\\\\nfrom dataclasses import dataclass\\\\nimport tempfile\\\\nimport urllib.parse\\\\nimport unittest.mock\\\\n\\\\n@dataclass\\\"class ExampleData:\\\"data: str\\\\n\\\\nasync def fetch_data(session, url):\\\"async with session.get(url) as response:\\\"return await response.text()\\\\n\\\\nclass TestExample(unittest.TestCase):\\\"def setUp(self): self.loop = asyncio.get_event_loop() self.session = aiohttp.ClientSession(loop=self.loop)\\\"def tearDown(self): self.loop.run_until_complete(self.session.close())\\\"@unittest.mock.patch('aiohttp.ClientSession', new=self.session)\\"async def test_example(self):\\\"url = 'https://example.com'\\\"data = await fetch_data(self.session, url)\\\"self.assertIn('Example', data)\\\"\\\\nif __name__ == '__main__':\\\"unittest.main()