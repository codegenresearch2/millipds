from typing import Set, Optional, Tuple\\\nimport asyncio\\\\\nimport aiohttp\\\\\nfrom aiohttp import web\\\\\nfrom . import database\\\\\n\\\\\nMILLIPDS_DB = web.AppKey(\\\"MILLIPDS_DB\\\", database.Database)\\\\\nMILLIPDS_AIOHTTP_CLIENT = web.AppKey(\\\"MILLIPDS_AIOHTTP_CLIENT\\\", aiohttp.ClientSession)\\\\\nMILLIPDS_FIREHOSE_QUEUES = web.AppKey(\\\"MILLIPDS_FIREHOSE_QUEUES\\\", Set[asyncio.Queue[Optional[Tuple[int, bytes]]]])\\\\\nMILLIPDS_FIREHOSE_QUEUES_LOCK = web.AppKey(\\\"MILLIPDS_FIREHOSE_QUEUES_LOCK\\\", asyncio.Lock)\\\\\n\\\\\n# these helpers are useful for conciseness and type hinting\\\\\ndef get_db(req: web.Request):\\\\\n    return req.app[MILLIPDS_DB]\\\\\ndef get_client(req: web.Request):\\\\\n    return req.app[MILLIPDS_AIOHTTP_CLIENT]\\\\\ndef get_firehose_queues(req: web.Request):\\\\\n    return req.app[MILLIPDS_FIREHOSE_QUEUES]\\\\\ndef get_firehose_queues_lock(req: web.Request):\\\\\n    return req.app[MILLIPDS_FIREHOSE_QUEUES_LOCK]\\\\\n\\\\\n__all__ = [\\\"",\\\"MILLIPDS_DB\",\\\"MILLIPDS_AIOHTTP_CLIENT\",\\\"MILLIPDS_FIREHOSE_QUEUES\",\\\"MILLIPDS_FIREHOSE_QUEUES_LOCK\",\\\"get_db\",\\\"get_client\",\\\"get_firehose_queues\",\\\"get_firehose_queues_lock\"]