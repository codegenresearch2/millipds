python\nfrom typing import Set, Optional, Tuple\nimport asyncio\n\nimport aiohttp\nfrom aiohttp import web\n\nfrom . import database\nfrom .did import DIDResolver\n\n\nMILLIPDS_DB = web.AppKey("MILLIPDS_DB", database.Database)\nMILLIPDS_AIOHTTP_CLIENT = web.AppKey("MILLIPDS_AIOHTTP_CLIENT", aiohttp.ClientSession)\nMILLIPDS_FIREHOSE_QUEUES = web.AppKey("MILLIPDS_FIREHOSE_QUEUES", Set[asyncio.Queue[Optional[Tuple[int, bytes]]]])\nMILLIPDS_FIREHOSE_QUEUES_LOCK = web.AppKey("MILLIPDS_FIREHOSE_QUEUES_LOCK", asyncio.Lock)\nMILLIPDS_DID_RESOLVER = web.AppKey("MILLIPDS_DID_RESOLVER", DIDResolver)\n\n\ndef get_db(req: web.Request):", "    return req.app[MILLIPDS_DB]}\n\n\ndef get_client(req: web.Request):", "    return req.app[MILLIPDS_AIOHTTP_CLIENT]}\n\n\ndef get_firehose_queues(req: web.Request):", "    return req.app[MILLIPDS_FIREHOSE_QUEUES]}\n\n\ndef get_firehose_queues_lock(req: web.Request):", "    return req.app[MILLIPDS_FIREHOSE_QUEUES_LOCK]}\n\n\ndef get_did_resolver(req: web.Request):", "    return req.app[MILLIPDS_DID_RESOLVER]}\n\n\n__all__ = [", "    \"MILLIPDS_DB\",\n    \"MILLIPDS_AIOHTTP_CLIENT\",\n    \"MILLIPDS_FIREHOSE_QUEUES\",\n    \"MILLIPDS_FIREHOSE_QUEUES_LOCK\",\n    \"MILLIPDS_DID_RESOLVER\",\n    \"get_db\",\n    \"get_client\",\n    \"get_firehose_queues\",\n    \"get_firehose_queues_lock\",\n    \"get_did_resolver\",\n]\n