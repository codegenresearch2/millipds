from typing import Set, Optional, Tuple\\\nimport asyncio\\nimport aiohttp\\nfrom aiohttp import web\\nfrom . import database, static_config, crypto, util\\nfrom .did import DIDResolver\\n\nMILLIPDS_DB = web.AppKey(\"MILLIPDS_DB\", database.Database)\\\\\\\nMILLIPDS_AIOHTTP_CLIENT = web.AppKey(\"MILLIPDS_AIOHTTP_CLIENT\", aiohttp.ClientSession)\\\\\\nMILLIPDS_FIREHOSE_QUEUES = web.AppKey(\"MILLIPDS_FIREHOSE_QUEUES\", Set[asyncio.Queue[Optional[Tuple[int, bytes]]]])\\\\\\nMILLIPDS_FIREHOSE_QUEUES_LOCK = web.AppKey(\"MILLIPDS_FIREHOSE_QUEUES_LOCK\", asyncio.Lock)\\\\\\nMILLIPDS_DID_RESOLVER = web.AppKey(\"MILLIPDS_DID_RESOLVER\", DIDResolver)\\\\\\n\n# Helper functions to retrieve components from the application context\ndef get_db(req: web.Request):\n    return req.app[MILLIPDS_DB]\ndef get_client(req: web.Request):\n    return req.app[MILLIPDS_AIOHTTP_CLIENT]\ndef get_firehose_queues(req: web.Request):\n    return req.app[MILLIPDS_FIREHOSE_QUEUES]\ndef get_firehose_queues_lock(req: web.Request):\n    return req.app[MILLIPDS_FIREHOSE_QUEUES_LOCK]\ndef get_did_resolver(req: web.Request):\n    return req.app[MILLIPDS_DID_RESOLVER]\n\n__all__ = [\"MILLIPDS_DB\", \"MILLIPDS_AIOHTTP_CLIENT\", \"MILLIPDS_FIREHOSE_QUEUES\", \"MILLIPDS_FIREHOSE_QUEUES_LOCK\", \"MILLIPDS_DID_RESOLVER\", \"get_db\", \"get_client\", \"get_firehose_queues\", \"get_firehose_queues_lock\", \"get_did_resolver"]