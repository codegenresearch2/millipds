import importlib.metadata\\\nimport logging\\\nimport asyncio\\\nimport time\\\nimport os\\\nimport io\\\nimport json\\\nimport hashlib\\\nimport base64\\\nimport urllib.parse\\\nfrom getpass import getpass\\\nfrom aiohttp import web\\\nimport aiohttp\\\nimport jwt\\\nimport cbrrr\\\nimport apsw\\\nimport aiohttp_middlewares\\\nfrom aiohttp_middlewares import cors_middleware\\\nfrom . import static_config\\\nfrom . import database\\\nfrom . import auth_oauth\\\nfrom . import atproto_sync\\\nfrom . import atproto_repo\\\nfrom . import crypto\\\nfrom . import util\\\nfrom .appview_proxy import service_proxy\\\nfrom .auth_bearer import authenticated\\\nfrom .app_util import *\\\\nlogger = logging.getLogger(__name__)\\\nroutes = web.RouteTableDef()\\\\n\n@web.middleware\\\\nasync def atproto_service_proxy_middleware(request: web.Request, handler):\\\\n    # Middleware to handle service proxying for ATProto\\\\n    atproto_proxy = request.headers.get(\