import aiohttp\nimport asyncio\nimport logging\nfrom aiohttp import web\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\nroutes = web.RouteTableDef()\n\n@routes.get('/example')\nasync def example_handler(request):\n    try:\n        # Your database interaction code here\n        return web.json_response({'status': 'success'})\n    except Exception as e:\n        logger.error(f'Error: {e}')\n        return web.json_response({'error': 'Internal Server Error'}, status=500)\n\napp = web.Application()\napp.add_routes(routes)\n\nif __name__ == '__main__':\n    web.run_app(app)