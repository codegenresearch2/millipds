import logging\n\n# Configure logging\nlogging.basicConfig(level=logging.DEBUG)\n\nclass Database:\n    def __init__(self, db_path):\n        self.db_path = db_path\n        self.connection = None\n\n    def connect(self):\n        try:\n            self.connection = sqlite3.connect(self.db_path)\n            logging.info('Connected to the database.')\n        except sqlite3.Error as e:\n            logging.error(f'Error connecting to the database: {e}') \n\n    def close(self):\n        if self.connection:\n            self.connection.close()\n            logging.info('Database connection closed.')\n\n    def initialize_tables(self):\n        try:\n            cursor = self.connection.cursor()\n            # SQL statements to create tables\n            cursor.execute('''CREATE TABLE IF NOT EXISTS users (\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\n                username TEXT NOT NULL,\n                password TEXT NOT NULL\n            )''') \n            logging.info('Tables initialized successfully.')\n        except sqlite3.Error as e:\n            logging.error(f'Error initializing tables: {e}') \n\n# Example usage\nif __name__ == '__main__':\n    db = Database('example.db')\n    db.connect()\n    db.initialize_tables()\n    db.close()